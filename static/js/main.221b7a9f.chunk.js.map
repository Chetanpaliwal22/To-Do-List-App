{"version":3,"sources":["components/TodoItem/ToDoItem.js","firebase.js","components/Header/Header.js","components/TaskForm/TaskForm.js","components/Signin/Signin.js","components/Signup/Signup.js","components/Loading/Loading.js","components/Main/Main.js","App.js","serviceWorker.js","index.js"],"names":["TodoItem","props","className","type","checked","item","status","onChange","handleChange","userId","task","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","Header","this","toggleCompletedTaskMode","toggleSigninPopup","toggleSignupPopup","handleLogOut","Navbar","dark","expand","NavbarBrand","Collapse","navbar","Nav","NavItem","to","onClick","userInfo","userName","NavDropdown","title","Item","React","Component","TaskForm","handleSubmit","event","addToDo","Date","now","userEmail","inputNode","value","dateCreated","Form","Group","controlId","Label","Control","maxLength","placeholder","required","ref","node","Sigin","appTokenKey","handleSign","releaseVersion","auth","signInWithEmailAndPassword","email","password","then","user","catch","err","shareToast","message","toast","handleGoogleLogin","bind","loginWithGoogle","result","error","alert","localStorage","removeItem","setItem","googleProvider","GoogleAuthProvider","signInWithPopup","showSigninPopup","configure","Modal","show","onHide","closeButton","Title","Body","FormGroup","for","Input","name","id","Footer","Button","variant","Signup","showSignupPopup","Loading","Main","mode","setState","completedTaskMode","toggleShowTaskFormMode","showTaskForm","updateUserInfo","state","toggleLoadingMode","isLoading","signOut","updateContent","a","collection","get","tododatas","list","docs","map","doc","data","todos","addTodo","newTodo","toString","set","push","console","update","updatedTodos","todo","showHeaderText","headerText","onAuthStateChanged","uid","displayName","completedtodos","filter","pendingtodos","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.221b7a9f.chunk.js","sourcesContent":["import React from \"react\"\r\nimport \"../../style.css\"\r\n\r\nfunction TodoItem(props) {\r\n    return (\r\n        <div className=\"todo-item\">\r\n            <label>\r\n            <input \r\n                type=\"radio\" \r\n                checked={props.item.status === 'completed'} \r\n                onChange={() => props.handleChange(props.item.userId)}\r\n            />\r\n            </label>\r\n            <p>{props.item.task}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoItem","import firebase from \"firebase\";\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n  apiKey: \"AIzaSyB0SROk4amzArI8RzE-omf2dNsMyvFQ6YY\",\r\n  authDomain: \"to-do-list-app-25482.firebaseapp.com\",\r\n  projectId: \"to-do-list-app-25482\",\r\n  storageBucket: \"to-do-list-app-25482.appspot.com\",\r\n  messagingSenderId: \"580095436319\",\r\n  appId: \"1:580095436319:web:79a40bdf16348bba38d72a\"\r\n});\r\n\r\nconst db = firebaseApp.firestore();\r\nexport { db };\r\n","import React from 'react';\r\nimport {\r\n    Navbar, NavbarBrand, Nav, Collapse, NavItem\r\n} from 'reactstrap';\r\nimport { NavDropdown } from 'react-bootstrap';\r\nimport { NavLink } from 'react-router-dom';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\n\r\nclass Header extends React.Component {\r\n\r\n    render() {\r\n        const { toggleCompletedTaskMode, toggleSigninPopup, toggleSignupPopup, handleLogOut } = this.props;\r\n\r\n        return (\r\n\r\n            <div>\r\n                <Navbar dark expand=\"md header\">\r\n                    <div className=\"container\">\r\n                        <NavbarBrand className=\"mr-auto\">TO-Do List</NavbarBrand>\r\n                        <Collapse navbar>\r\n                            <Nav navbar className=\"headeritem\">\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to='/To-Do-List-App/home' onClick={() => toggleCompletedTaskMode(false)}><span className=\"fa fa-home fa-sm\"></span> Home</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to='/To-Do-List-App/completed-task' onClick={() => toggleCompletedTaskMode(true)}><span className=\"fa fa-list fa-sm\"></span> Completed-Tasks</NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                            <Nav className=\"ml-auto\" navbar>\r\n                                {this.props.userInfo.userName !== '' ?\r\n                                    <NavDropdown title={<span className=\"text-white\">{this.props.userInfo.userName}</span>}>\r\n                                        <NavDropdown.Item onClick={() => handleLogOut()}>Logout</NavDropdown.Item>\r\n                                        <NavDropdown.Item>About To-Do List</NavDropdown.Item>\r\n                                    </NavDropdown>\r\n                                    : <Nav navbar>\r\n                                        <NavItem>\r\n                                            <NavLink className=\"nav-link fa fa-sign-in fa-sm\" to='' onClick={() => toggleSigninPopup()}> Sign-in</NavLink>\r\n                                        </NavItem>\r\n                                        <NavItem>\r\n                                            <NavLink className=\"nav-link fa fa-list-alt  fa-sm\" to='' onClick={() => toggleSignupPopup()}> Sign-up</NavLink>\r\n                                        </NavItem>\r\n                                    </Nav>}\r\n                            </Nav>\r\n                        </Collapse>\r\n                    </div>\r\n                </Navbar>\r\n            </div>\r\n        )\r\n    };\r\n\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Form from 'react-bootstrap/Form';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass TaskForm extends Component {\r\n\r\n    handleSubmit = (event) => {\r\n        const { addToDo, userInfo } = this.props;\r\n        const newTodo = {\r\n            userId: Date.now(),\r\n            userName: userInfo.userName,\r\n            userEmail: userInfo.userEmail,\r\n            task: this.inputNode.value,\r\n            status: 'pending',\r\n            dateCreated: Date.now()\r\n        }\r\n        addToDo(newTodo);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Form>\r\n                <Form.Group controlId=\"formTask\">\r\n                    <Form.Label>Task Detail</Form.Label>\r\n                    <Form.Control type=\"text\" maxLength={30} placeholder=\"Enter task name.\" required ref={node => (this.inputNode = node)} />\r\n                </Form.Group>\r\n                <Link onClick={this.handleSubmit}>\r\n                    Add\r\n                </Link>\r\n            </Form>\r\n        )\r\n    };\r\n}\r\n\r\nexport default TaskForm;","import React from \"react\";\r\nimport { Button, Modal } from 'react-bootstrap';\r\nimport { FormGroup, Label, Input } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport firebase from \"firebase\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport './Signin.css';\r\n\r\nclass Sigin extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleGoogleLogin = this.handleGoogleLogin.bind(this);\r\n    }\r\n\r\n    appTokenKey = \"appToken\";\r\n\r\n    handleSign = (event) => {\r\n        if (this.props.releaseVersion !== '1.0') {\r\n            firebase.auth().signInWithEmailAndPassword(\r\n                this.email.value, this.password.value\r\n            ).then(user => {\r\n                //Login successful\r\n            }).catch(err => {\r\n                //Error\r\n            })\r\n        }\r\n        else {\r\n            this.shareToast(\"Sorry! Login with Email/Pwd is not available for this release.\");\r\n        }\r\n    }\r\n\r\n    handleGoogleLogin() {\r\n        this.loginWithGoogle().then(function (result) {\r\n            //Login successful\r\n        }).catch(function (error) {\r\n            alert(error);\r\n            localStorage.removeItem(\"firebaseAuthInProgress\");\r\n        });\r\n\r\n        localStorage.setItem(\"firebaseAuthInProgress\", \"1\");\r\n        this.props.toggleSigninPopup();\r\n    }\r\n\r\n    shareToast = (message) => toast(message);\r\n\r\n    loginWithGoogle() {\r\n        const googleProvider = new firebase.auth.GoogleAuthProvider();\r\n        return firebase.auth().signInWithPopup(googleProvider);\r\n    }\r\n\r\n    render() {\r\n\r\n        const { showSigninPopup, toggleSigninPopup } = this.props;\r\n        toast.configure();\r\n\r\n        return (\r\n            <Modal show={showSigninPopup} onHide={() => toggleSigninPopup()}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Signin</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <FormGroup className=\"formgroup\">\r\n                        <Label for=\"email\" className=\"label\">Email:</Label>\r\n                        <Input type=\"email\" name=\"email\" id=\"email\" placeholder=\"Please enter your email.\" />\r\n                    </FormGroup>\r\n                    <FormGroup className=\"formgroup\">\r\n                        <Label for=\"password\" className=\"label\">Password:</Label>\r\n                        <Input type=\"password\" name=\"password\" id=\"password\" placeholder=\"Please enter your password.\" />\r\n                    </FormGroup>\r\n                    <p className=\"link\">\r\n                        Having issues with sign in <Link onClick={() => this.shareToast('Only Google Authentication is available for this release!')}>Info?</Link>\r\n                    </p>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"outline-success\" onClick={this.handleSign.bind(this)}>Sign-in</Button>\r\n                    <Button variant=\"outline-primary\" onClick={this.handleGoogleLogin.bind(this)} >Continue with Google</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Sigin;","import React, { Component } from \"react\";\r\nimport { FormGroup, Label, Input } from 'reactstrap';\r\nimport { Button, Modal } from 'react-bootstrap';\r\n\r\nclass Signup extends Component {\r\n\r\n\r\n\r\n    render() {\r\n        const { showSignupPopup, toggleSignupPopup } = this.props;\r\n\r\n        return (\r\n            <Modal show={showSignupPopup} onHide={() => toggleSignupPopup()}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Signup</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <FormGroup>\r\n                        <Label for=\"email\" className=\"label\">Email:</Label>\r\n                        <Input type=\"email\" name=\"email\" id=\"email\" placeholder=\"Please enter your email.\" />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for=\"password\" className=\"label\">Password:</Label>\r\n                        <Input type=\"password\" name=\"password\" id=\"password\" placeholder=\"Please enter your password.\" />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for=\"password\" className=\"label\">Confirm Password:</Label>\r\n                        <Input type=\"password\" name=\"password\" id=\"password\" placeholder=\"Please enter your password.\" />\r\n                    </FormGroup>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"outline-success\">Sign-up</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Signup;","import React, { Component } from \"react\";\r\n\r\nclass Loading extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"col-12 todo-list\" >\r\n                <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n                <p>Loading . . .</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Loading;","import React, { Component } from \"react\";\r\nimport TodoItem from '../TodoItem/ToDoItem';\r\nimport { db } from '../../firebase';\r\nimport Header from '../Header/Header';\r\nimport TaskForm from \"../TaskForm/TaskForm\";\r\nimport Signin from '../Signin/Signin';\r\nimport Signup from \"../Signup/Signup\";\r\nimport firebase from \"firebase\";\r\nimport Loading from '../Loading/Loading'\r\nimport './Main.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Main extends Component {\r\n\r\n    constructor() {\r\n        super()\r\n\r\n        this.state = {\r\n            todos: [],\r\n            showTaskForm: false,\r\n            userInfo: {\r\n                userName: '',\r\n                userEmail: '',\r\n                userId: ''\r\n            },\r\n            isLoading: true,\r\n            completedTaskMode: false,\r\n            showSigninPopup: false,\r\n            showSignupPopup: false,\r\n            releaseVersion: '1.0'\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.updateContent();\r\n        firebase.auth().onAuthStateChanged(user => {\r\n            if (user) {\r\n                localStorage.removeItem(\"firebaseAuthInProgress\");\r\n                localStorage.setItem(this.appTokenKey, user.uid);\r\n                const userInfo = {\r\n                    userName: user.displayName,\r\n                    userEmail: user.email,\r\n                    userId: user.email\r\n                };\r\n                this.updateUserInfo(userInfo);\r\n            }\r\n        });\r\n    }\r\n\r\n    toggleCompletedTaskMode = (mode) => this.setState({ completedTaskMode: mode });\r\n    toggleShowTaskFormMode = (mode) => this.setState({ showTaskForm: mode });\r\n    updateUserInfo = (userInfo) => this.setState({ userInfo });\r\n    toggleSigninPopup = () => this.setState({ showSigninPopup: !this.state.showSigninPopup });\r\n    toggleSignupPopup = () => this.setState({ showSignupPopup: !this.state.showSignupPopup });\r\n    toggleLoadingMode = () => this.setState({ isLoading: !this.state.isLoading });\r\n\r\n    handleLogOut = () => {\r\n        this.toggleLoadingMode();\r\n        firebase.auth().signOut().then(function () {\r\n            localStorage.removeItem(\"appToken\");\r\n            const userInfo = {\r\n                userName: '',\r\n                userEmail: '',\r\n                userId: ''\r\n            };\r\n            this.updateUserInfo(userInfo);\r\n            this.toggleLoadingMode();\r\n        }.bind(this));\r\n    };\r\n\r\n    updateContent = async () => {\r\n        let tododatas = await db.collection(\"ToDoList\").get();\r\n        let list = tododatas.docs.map(doc => {\r\n            let data = doc.data();\r\n            return {\r\n                userId: data.userId,\r\n                task: data.task,\r\n                userEmail: data.userEmail,\r\n                status: data.status,\r\n                userName: data.userName\r\n            }\r\n        })\r\n        this.setState({\r\n            todos: list,\r\n            isLoading: false\r\n        })\r\n    };\r\n\r\n    addTodo = (newTodo) => {\r\n        db.collection('ToDoList').doc(newTodo.userId.toString()).set(newTodo).then(() => {\r\n            const { todos } = this.state;\r\n            todos.push(newTodo);\r\n            this.setState({\r\n                todos,\r\n                showTaskForm: false\r\n            })\r\n        }).catch((error) => {\r\n            console.error(\"Error writing document: \", error);\r\n        });\r\n    }\r\n\r\n    handleChange = (id) => {\r\n\r\n        const { todos } = this.state;\r\n        db.collection(\"ToDoList\").doc(id.toString()).update({\r\n            \"status\": \"completed\",\r\n        }).then(() => {\r\n            const updatedTodos = todos.map(todo =>\r\n                todo.userId === id\r\n                    ? { ...todo, status: 'completed' }\r\n                    : todo\r\n            )\r\n            this.setState({ todos: updatedTodos });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { completedTaskMode, showTaskForm, todos, userInfo } = this.state;\r\n        const completedtodos = todos.filter((item) => { return (item.status === 'completed' && item.userEmail === userInfo.userEmail) }).map((item) => < TodoItem key={item.userId} item={item} handleChange={this.handleChange} />);\r\n        const pendingtodos = todos.filter((item) => { return item.status === 'pending' && item.userEmail === userInfo.userEmail }).map((item) => < TodoItem key={item.userId} item={item} handleChange={this.handleChange} />);\r\n        const userName = userInfo.userName === '' ? 'there' : userInfo.userName;\r\n        return (\r\n            <div>\r\n                <Header toggleCompletedTaskMode={this.toggleCompletedTaskMode} toggleSigninPopup={this.toggleSigninPopup} toggleSignupPopup={this.toggleSignupPopup} handleLogOut={this.handleLogOut} {...this.state} />\r\n                <Signin toggleSigninPopup={this.toggleSigninPopup} {...this.state} updateUserInfo={this.updateUserInfo} />\r\n                <Signup toggleSignupPopup={this.toggleSignupPopup} {...this.state} updateUserInfo={this.updateUserInfo} />\r\n                {this.state.isLoading ?\r\n                    <Loading /> : <div>\r\n                        {completedTaskMode ?\r\n                            <div className=\"todo-list\">\r\n                                {this.showHeaderText(\"Woo Hoo, You have completed following tasks!\")}\r\n                                <div className=\"scroll-div\">\r\n                                    {completedtodos}\r\n                                </div>\r\n                            </div> :\r\n                            <div className=\"todo-list\">\r\n                                {this.showHeaderText(\"Hey \" + userName + \", what's on your mind today?\")}\r\n                                <div className=\"scroll-div\">\r\n                                    {pendingtodos}\r\n                                </div>\r\n                                {showTaskForm && this.showTaskForm()}\r\n                                <div className=\"todo-link\">\r\n                                    <Link onClick={() => this.toggleShowTaskFormMode(true)}>Add Task</Link>\r\n                                </div>\r\n                            </div>} </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n    showHeaderText = (headerText) => {\r\n        return <h3> {headerText} </h3>\r\n    }\r\n\r\n    showTaskForm = () => {\r\n        return (\r\n            <TaskForm addToDo={this.addTodo.bind(this)} {...this.state} />\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Main;","import React from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport Main from './components/Main/Main';\r\nimport { BrowserRouter, Switch, Route, Redirect } from \"react-router-dom\";\r\nimport './App.css';\r\n\r\nclass App extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <div className=\"App\">\r\n          <Switch>\r\n            <Route exact path='/To-Do-List-App' component={Main} />\r\n            <Route exact path='/' component={Main} />\r\n            <Route exact path='/To-Do-List-App/home' component={Main} />\r\n            <Route exact path='/To-Do-List-App/completed-task' component={Main} />\r\n            <Redirect to=\"/To-Do-List-App/home\" />\r\n          </Switch>\r\n        </div>\r\n      </BrowserRouter>\r\n    )\r\n  };\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}