{"version":3,"sources":["components/TodoItem/ToDoItem.js","firebase.js","components/Header/Header.js","components/Home/Home.js","utils/Validation.js","components/TaskForm/TaskForm.js","components/Signin/Signin.js","components/Signup/Signup.js","components/Leaderboard/Leaderboard.js","components/Loading/Loading.js","components/Main/Main.js","App.js","serviceWorker.js","index.js"],"names":["TodoItem","props","className","type","checked","item","status","onChange","handleChange","userId","task","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","Header","this","toggleCompletedTaskMode","toggleSigninPopup","toggleSignupPopup","handleLogOut","toggleLeaderboardPopup","Navbar","dark","expand","NavbarBrand","Collapse","navbar","Nav","NavItem","to","onClick","userInfo","userName","NavDropdown","title","Item","React","Component","Home","required","val","length","maxLength","len","minLength","validEmail","test","isSamePassword","password","confirmPassword","TaskForm","handleSubmit","event","state","addToDo","Date","now","userEmail","dateCreated","setState","taskValid","onTaskchange","target","name","value","Form","Group","controlId","Label","Input","invalid","id","placeholder","FormFeedback","Sigin","appTokenKey","handleSignin","validateForm","emailValid","passwordValid","auth","signInWithEmailAndPassword","email","then","user","authSuccess","catch","err","localStorage","removeItem","code","shareErrorToast","setItem","collection","where","get","docs","map","doc","userData","data","updateUserInfo","updateUserLoggedIn","updateContent","onEmailchange","onPasswordchange","handleGoogleLogin","bind","loginWithGoogle","result","error","alert","googleProvider","GoogleAuthProvider","signInWithPopup","showSigninPopup","Modal","show","onHide","closeButton","Title","Body","FormGroup","for","shareInfoToast","Footer","Button","variant","Signup","onNamechange","onConfirmPasswordchange","registerUser","nameValid","confirmPasswordValid","createUserWithEmailAndPassword","toggleLoadingMode","userScore","creationDate","lastActiveDate","toString","set","console","confirmpassword","showSignupPopup","Leaderboard","showLeaderboardPopup","score","Loading","Main","mode","completedTaskMode","toggleShowTaskFormMode","showTaskForm","isUserLoggedIn","isLoading","toastConfig","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","shareSuccessToast","message","toast","success","info","signOut","a","tododatas","list","todos","addTodo","newTodo","push","update","updatedTodos","todo","showHeaderText","headerText","releaseVersion","onAuthStateChanged","uid","displayName","split","completedtodos","filter","pendingtodos","configure","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","Fragment","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.530f11d8.chunk.js","sourcesContent":["import React from \"react\"\r\nimport \"../../style.css\"\r\n\r\nfunction TodoItem(props) {\r\n    return (\r\n        <div className=\"todo-item\">\r\n            <label>\r\n            <input \r\n                type=\"radio\" \r\n                checked={props.item.status === 'completed'} \r\n                onChange={() => props.handleChange(props.item.userId)}\r\n            />\r\n            </label>\r\n            <p>{props.item.task}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoItem","import firebase from \"firebase\";\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n  apiKey: \"AIzaSyB0SROk4amzArI8RzE-omf2dNsMyvFQ6YY\",\r\n  authDomain: \"to-do-list-app-25482.firebaseapp.com\",\r\n  projectId: \"to-do-list-app-25482\",\r\n  storageBucket: \"to-do-list-app-25482.appspot.com\",\r\n  messagingSenderId: \"580095436319\",\r\n  appId: \"1:580095436319:web:79a40bdf16348bba38d72a\"\r\n});\r\n\r\nconst db = firebaseApp.firestore();\r\nexport { db };\r\n","import React from 'react';\r\nimport {\r\n    Navbar, NavbarBrand, Nav, Collapse, NavItem\r\n} from 'reactstrap';\r\nimport { NavDropdown } from 'react-bootstrap';\r\nimport { NavLink } from 'react-router-dom';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\n\r\nclass Header extends React.Component {\r\n\r\n    render() {\r\n        const { toggleCompletedTaskMode, toggleSigninPopup, toggleSignupPopup, handleLogOut, toggleLeaderboardPopup } = this.props;\r\n\r\n        return (\r\n\r\n            <div>\r\n                <Navbar dark expand=\"md header\">\r\n                    <div className=\"container\">\r\n                        <NavbarBrand className=\"mr-auto\">TO-Do List</NavbarBrand>\r\n                        <Collapse navbar>\r\n                            <Nav navbar className=\"headeritem\">\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to='/To-Do-List-App/home' onClick={() => toggleCompletedTaskMode(false)}><span className=\"fa fa-home fa-sm\"></span> Home</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to='/To-Do-List-App/completed-task' onClick={() => toggleCompletedTaskMode(true)}><span className=\"fa fa-list fa-sm\"></span> Completed-Tasks</NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                            <Nav className=\"ml-auto\" navbar>\r\n                                {this.props.userInfo && this.props.userInfo.userName !== '' ?\r\n                                    <NavDropdown title={<span className=\"text-white\">{this.props.userInfo.userName}</span>}>\r\n                                        <NavDropdown.Item>About To-Do List</NavDropdown.Item>\r\n                                        <NavDropdown.Item onClick={() => toggleLeaderboardPopup()}>Leaderboard</NavDropdown.Item>\r\n                                        <NavDropdown.Item onClick={() => handleLogOut()}>Logout</NavDropdown.Item>\r\n                                    </NavDropdown>\r\n                                    : <Nav navbar>\r\n                                        <NavItem>\r\n                                            <NavLink className=\"nav-link fa fa-sign-in fa-sm\" to='' onClick={() => toggleSigninPopup()}> Sign-in</NavLink>\r\n                                        </NavItem>\r\n                                        <NavItem>\r\n                                            <NavLink className=\"nav-link fa fa-list-alt  fa-sm\" to='' onClick={() => toggleSignupPopup()}> Sign-up</NavLink>\r\n                                        </NavItem>\r\n                                    </Nav>}\r\n                            </Nav>\r\n                        </Collapse>\r\n                    </div>\r\n                </Navbar>\r\n            </div>\r\n        )\r\n    };\r\n\r\n}\r\n\r\nexport default Header;","import React, { Component } from \"react\";\r\nimport './Home.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Home extends Component {\r\n\r\n    render() {\r\n\r\n        const { toggleSigninPopup, toggleSignupPopup } = this.props;\r\n\r\n        return (\r\n            <div className=\"todo-list\">\r\n                <h3 className=\"h3\"> “One of the secrets of getting more done is to make a TO-DO List every day, keep it visible.”</h3>\r\n                <h4> — Alan Lakein</h4>\r\n                <div className=\"linkgroup link\">\r\n                    <Link to={'/'} onClick={() => toggleSigninPopup(true)}> Signin </Link>&nbsp; or &nbsp; <Link to={'/'} onClick={() => toggleSignupPopup(true)}> Signup </Link> &nbsp;and explore the To-Do List app.\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","export const required = (val) => val && val.length;\r\nexport const maxLength = (val, len) => !(val) || (val.length <= len);\r\nexport const minLength = (val, len) => val && (val.length >= len);\r\nexport const validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\nexport const isSamePassword = (password, confirmPassword) => password === confirmPassword","import React, { Component } from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Form from 'react-bootstrap/Form';\r\nimport { Link } from 'react-router-dom';\r\nimport { FormFeedback, Input } from 'reactstrap';\r\nimport { minLength } from '../../utils/Validation';\r\n\r\nclass TaskForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            task: '',\r\n            taskValid: true,\r\n        }\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        const isFormValid = minLength(this.state.task, 1);\r\n        if (!isFormValid) {\r\n            this.setState({\r\n                taskValid: minLength(this.state.task, 1)\r\n            });\r\n            return;\r\n        }\r\n        const { addToDo, userInfo } = this.props;\r\n        const newTodo = {\r\n            userId: Date.now(),\r\n            userName: userInfo.userName,\r\n            userEmail: userInfo.userEmail,\r\n            task: this.state.task,\r\n            status: 'pending',\r\n            dateCreated: Date.now()\r\n        }\r\n        addToDo(newTodo);\r\n    }\r\n\r\n    onTaskchange = (event) => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value,\r\n            taskValid: minLength(event.target.value, 1)\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Form>\r\n                <Form.Group controlId=\"formTask\">\r\n                    <Form.Label>Task Detail</Form.Label>\r\n                    <Input invalid={!this.state.taskValid} type=\"task\" name=\"task\" id=\"task\" maxLength={30} placeholder=\"Enter task name.\" value={this.state.task} onChange={this.onTaskchange} />\r\n                    <FormFeedback>Task can't be empty.</FormFeedback>\r\n                </Form.Group>\r\n                <Link onClick={this.handleSubmit}>\r\n                    Add\r\n                </Link>\r\n            </Form>\r\n        )\r\n    };\r\n}\r\n\r\nexport default TaskForm;","import React from \"react\";\r\nimport { Button, Modal } from 'react-bootstrap';\r\nimport { FormGroup, Label, Input, FormFeedback } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport firebase from \"firebase\";\r\nimport { required, validEmail } from '../../utils/Validation';\r\nimport { db } from '../../firebase';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport './Signin.css';\r\n\r\nclass Sigin extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            emailValid: true,\r\n            passwordValid: true\r\n        };\r\n        this.handleGoogleLogin = this.handleGoogleLogin.bind(this);\r\n        this.authSuccess = this.authSuccess.bind(this);\r\n        this.handleSignin = this.handleSignin.bind(this);\r\n    }\r\n\r\n    appTokenKey = \"appToken\";\r\n\r\n    handleSignin = () => {\r\n\r\n        this.validateForm();\r\n\r\n        const isFormValid = this.state.emailValid && this.state.passwordValid;\r\n        if (!isFormValid) {\r\n            return;\r\n        }\r\n\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            this.state.email, this.state.password\r\n        ).then(user => {\r\n            this.authSuccess();\r\n        }).catch(err => {\r\n            localStorage.removeItem(\"firebaseAuthInProgress\");\r\n            if (err.code === \"auth/wrong-password\") {\r\n                this.props.shareErrorToast(\"Password is invalid, Try again!\");\r\n                this.setState({\r\n                    passwordValid: false\r\n                });\r\n            }\r\n        });\r\n        localStorage.setItem(\"firebaseAuthInProgress\", \"1\");\r\n\r\n    }\r\n\r\n    validateForm = () => {\r\n        this.setState({\r\n            emailValid: validEmail(this.state.email),\r\n            passwordValid: required(this.state.password)\r\n        });\r\n    }\r\n\r\n    authSuccess = () => {\r\n\r\n        db.collection('User').where(\"userEmail\", \"==\", this.state.email).get().then((user) => {\r\n            const userInfo = user.docs.map(doc => {\r\n                let userData = doc.data();\r\n                return {\r\n                    userName: userData.userName,\r\n                    userEmail: userData.userEmail,\r\n                    userId: userData.userId\r\n                }\r\n            });\r\n            this.props.updateUserInfo(userInfo[0]);\r\n            this.props.updateUserLoggedIn(true);\r\n            localStorage.removeItem(\"firebaseAuthInProgress\");\r\n            localStorage.setItem(this.appTokenKey, userInfo.userId);\r\n            this.props.updateContent();\r\n            this.props.toggleSigninPopup();\r\n        });\r\n\r\n    }\r\n\r\n    handleGoogleLogin() {\r\n        this.loginWithGoogle().then(function (result) {\r\n            //Login successful\r\n        }).catch(function (error) {\r\n            alert(error);\r\n            localStorage.removeItem(\"firebaseAuthInProgress\");\r\n        });\r\n\r\n        localStorage.setItem(\"firebaseAuthInProgress\", \"1\");\r\n        this.props.toggleSigninPopup();\r\n    }\r\n\r\n    loginWithGoogle() {\r\n        const googleProvider = new firebase.auth.GoogleAuthProvider();\r\n        return firebase.auth().signInWithPopup(googleProvider);\r\n    }\r\n\r\n    onEmailchange = (event) => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value,\r\n            emailValid: validEmail(event.target.value)\r\n        });\r\n    }\r\n\r\n    onPasswordchange = (event) => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value,\r\n            passwordValid: required(event.target.value)\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        const { showSigninPopup, toggleSigninPopup } = this.props;\r\n\r\n        return (\r\n            <Modal show={showSigninPopup} onHide={() => toggleSigninPopup()}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Signin</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <FormGroup>\r\n                        <Label for=\"email\" className=\"label\">Email:</Label>\r\n                        <Input invalid={!this.state.emailValid} type=\"email\" name=\"email\" id=\"email\" placeholder=\"Enter your email here...\" value={this.state.email} onChange={this.onEmailchange} />\r\n                        <FormFeedback>Not a valid Email address</FormFeedback>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for=\"password\" className=\"label\">Password:</Label>\r\n                        <Input invalid={!this.state.passwordValid} type=\"password\" name=\"password\" id=\"password\" placeholder=\"Enter your password here...\" value={this.state.password} onChange={this.onPasswordchange} />\r\n                        <FormFeedback>This password is not correct.</FormFeedback>\r\n                    </FormGroup>\r\n                    <p className=\"link\">\r\n                        Having issues with sign in <Link to={\"/\"} onClick={() => this.props.shareInfoToast('You can create a new user using the sign-up form.')}>Info?</Link>\r\n                    </p>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"outline-success\" onClick={this.handleSignin.bind(this)}>Sign-in</Button>\r\n                    <Button variant=\"outline-primary\" onClick={this.handleGoogleLogin.bind(this)} >Continue with Google</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Sigin;","import React, { Component } from \"react\";\r\nimport { FormGroup, Label, Input, FormFeedback } from 'reactstrap';\r\nimport { Button, Modal } from 'react-bootstrap';\r\nimport firebase from \"firebase\";\r\nimport { maxLength, minLength, validEmail, isSamePassword } from '../../utils/Validation';\r\nimport { db } from '../../firebase';\r\n\r\nclass Signup extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            name: '',\r\n            email: '',\r\n            password: '',\r\n            confirmpassword: '',\r\n            nameValid: true,\r\n            emailValid: true,\r\n            passwordValid: true,\r\n            confirmPasswordValid: true\r\n        };\r\n        this.onNamechange = this.onNamechange.bind(this);\r\n        this.registerUser = this.registerUser.bind(this);\r\n        this.authSuccess = this.authSuccess.bind(this);\r\n        this.validateForm = this.validateForm.bind(this);\r\n    }\r\n\r\n    onNamechange = (event) => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value,\r\n            nameValid: minLength(event.target.value, 3) && maxLength(event.target.value, 12)\r\n        });\r\n    }\r\n\r\n    onEmailchange = (event) => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value,\r\n            emailValid: validEmail(event.target.value)\r\n        });\r\n    }\r\n\r\n    onPasswordchange = (event) => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value,\r\n            passwordValid: minLength(event.target.value, 6) && maxLength(event.target.value, 10)\r\n        });\r\n    }\r\n\r\n    onConfirmPasswordchange = (event) => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value,\r\n            confirmPasswordValid: isSamePassword(this.state.password, event.target.value)\r\n        });\r\n    }\r\n\r\n    registerUser = () => {\r\n        this.validateForm();\r\n        const isFormValid = this.state.nameValid && this.state.emailValid && this.state.passwordValid && this.state.confirmPasswordValid;\r\n        if (!isFormValid) {\r\n            return;\r\n        }\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(this.state.email, this.state.password)\r\n            .then(() => this.authSuccess())\r\n            .catch(() => { this.props.shareErrorToast('User registration failed!') });\r\n        this.props.toggleLoadingMode();\r\n        this.props.toggleSignupPopup();\r\n    }\r\n\r\n    authSuccess = () => {\r\n        const userInfo = {\r\n            userName: this.state.name,\r\n            userEmail: this.state.email,\r\n            userId: Date.now(),\r\n            userScore: 0,\r\n            creationDate: Date.now(),\r\n            lastActiveDate: Date.now()\r\n        }\r\n\r\n        db.collection('User').doc(userInfo.userId.toString()).set(userInfo).then(() => {\r\n            this.props.toggleLoadingMode();\r\n            this.props.updateUserInfo(userInfo);\r\n        }).catch((error) => {\r\n            console.error(\"Error writing document: \", error);\r\n        });\r\n    }\r\n\r\n    validateForm = () => {\r\n        this.setState({\r\n            nameValid: (minLength(this.state.name, 3) && maxLength(this.state.name, 12)),\r\n            emailValid: validEmail(this.state.email),\r\n            passwordValid: (minLength(this.state.password, 6) && maxLength(this.state.password, 10)),\r\n            confirmPasswordValid: isSamePassword(this.state.password, this.state.confirmpassword)\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { showSignupPopup, toggleSignupPopup } = this.props;\r\n\r\n        return (\r\n            <Modal show={showSignupPopup} onHide={() => toggleSignupPopup()}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Signup</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <FormGroup>\r\n                        <Label for=\"name\">Name:</Label>\r\n                        <Input invalid={!this.state.nameValid} type=\"name\" name=\"name\" id=\"name\" placeholder=\"Enter your name here...\" value={this.state.name} onChange={this.onNamechange} />\r\n                        <FormFeedback>Name of at least 3 & at most 12 character is required</FormFeedback>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for=\"email\" className=\"label\">Email:</Label>\r\n                        <Input invalid={!this.state.emailValid} type=\"email\" name=\"email\" id=\"email\" placeholder=\"Enter your email here...\" value={this.state.email} onChange={this.onEmailchange} />\r\n                        <FormFeedback>Not a valid Email address</FormFeedback>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for=\"password\" className=\"label\">Password:</Label>\r\n                        <Input invalid={!this.state.passwordValid} type=\"password\" name=\"password\" id=\"password\" placeholder=\"Enter your password here...\" value={this.state.password} onChange={this.onPasswordchange} />\r\n                        <FormFeedback>Password of at least 6 & at most 10 character is Required</FormFeedback>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for=\"confirmpassword\" className=\"label\">Confirm Password:</Label>\r\n                        <Input invalid={!this.state.confirmPasswordValid} type=\"password\" name=\"confirmpassword\" id=\"confirmpassword\" placeholder=\"Confirm your password...\" value={this.state.confirmpassword} onChange={this.onConfirmPasswordchange} />\r\n                        <FormFeedback>Password doesn't match</FormFeedback>\r\n                    </FormGroup>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"outline-success\" onClick={this.registerUser}>Sign-up</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Signup;","import React, { Component } from \"react\";\r\nimport { Modal } from 'react-bootstrap';\r\n\r\nclass Leaderboard extends Component {\r\n\r\n    render() {\r\n        const { showLeaderboardPopup, toggleLeaderboardPopup } = this.props;\r\n        const score = this.props.data.length * 3;\r\n\r\n        return (\r\n            <Modal show={showLeaderboardPopup} onHide={() => toggleLeaderboardPopup()} >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Leaderboard</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div >\r\n                        {score > 0 ? <h5> Great you have scored - {score} To-Do List points.</h5> : <h5> Your current score is 0. You can earn To-Do List points by completing tasks.</h5>}\r\n                        <p>In the next release, you will be able to see the leadership board.</p>\r\n                    </div>\r\n                </Modal.Body>\r\n            </Modal >\r\n        );\r\n    }\r\n}\r\n\r\nexport default Leaderboard;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Loading extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"col-12 todo-list\" >\r\n                <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n                <p>Loading data from firebase . . .</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Loading;","import React, { Component } from \"react\";\r\nimport TodoItem from '../TodoItem/ToDoItem';\r\nimport { db } from '../../firebase';\r\nimport Header from '../Header/Header';\r\nimport Home from '../Home/Home';\r\nimport TaskForm from \"../TaskForm/TaskForm\";\r\nimport Signin from '../Signin/Signin';\r\nimport Signup from \"../Signup/Signup\";\r\nimport Leaderboard from \"../Leaderboard/Leaderboard\";\r\nimport firebase from \"firebase\";\r\nimport Loading from '../Loading/Loading';\r\nimport { toast } from 'react-toastify';\r\nimport './Main.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Main extends Component {\r\n\r\n    constructor() {\r\n        super()\r\n\r\n        this.state = {\r\n            isUserLoggedIn: false,\r\n            todos: [],\r\n            showTaskForm: false,\r\n            userInfo: {\r\n                userName: '',\r\n                userEmail: '',\r\n                userId: ''\r\n            },\r\n            isLoading: true,\r\n            userScore: -1,\r\n            completedTaskMode: false,\r\n            showSigninPopup: false,\r\n            showSignupPopup: false,\r\n            showLeaderboardPopup: false,\r\n            releaseVersion: '1.0'\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.updateContent();\r\n\r\n        firebase.auth().onAuthStateChanged(user => {\r\n            if (user) {\r\n                localStorage.removeItem(\"firebaseAuthInProgress\");\r\n                localStorage.setItem(this.appTokenKey, user.uid);\r\n                const userInfo = {\r\n                    userName: user.displayName,\r\n                    userEmail: user.email,\r\n                    userId: user.email\r\n                };\r\n                if (userInfo.userName === null) {\r\n                    userInfo.userName = userInfo.userEmail?.split(\"@\")[0];\r\n                };\r\n                this.updateUserInfo(userInfo);\r\n                this.updateUserLoggedIn(true);\r\n            }\r\n        });\r\n    }\r\n\r\n    toggleCompletedTaskMode = (mode) => this.setState({ completedTaskMode: mode });\r\n    toggleShowTaskFormMode = (mode) => this.setState({ showTaskForm: mode });\r\n    updateUserInfo = (userInfo) => this.setState({ userInfo });\r\n    updateUserLoggedIn = (isUserLoggedIn) => this.setState({ isUserLoggedIn: isUserLoggedIn });\r\n    toggleSigninPopup = () => this.setState({ showSigninPopup: !this.state.showSigninPopup });\r\n    toggleSignupPopup = () => this.setState({ showSignupPopup: !this.state.showSignupPopup });\r\n    toggleLeaderboardPopup = () => this.setState({ showLeaderboardPopup: !this.state.showLeaderboardPopup });\r\n    toggleLoadingMode = () => this.setState({ isLoading: !this.state.isLoading });\r\n\r\n    toastConfig = {\r\n        position: \"bottom-right\",\r\n        autoClose: 4000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n    };\r\n\r\n    shareSuccessToast = (message) => toast.success(message, this.toastConfig);\r\n    shareErrorToast = (message) => toast.error(message, this.toastConfig);\r\n    shareInfoToast = (message) => toast.info(message, this.toastConfig);\r\n\r\n    handleLogOut = () => {\r\n        this.toggleLoadingMode();\r\n        firebase.auth().signOut().then(function () {\r\n            localStorage.removeItem(\"appToken\");\r\n            const userInfo = {\r\n                userName: '',\r\n                userEmail: '',\r\n                userId: ''\r\n            };\r\n            this.updateUserInfo(userInfo);\r\n            this.updateUserLoggedIn(false);\r\n            this.toggleLoadingMode();\r\n        }.bind(this));\r\n    };\r\n\r\n    updateContent = async () => {\r\n        let tododatas = await db.collection(\"ToDoList\").get();\r\n        let list = tododatas.docs.map(doc => {\r\n            let data = doc.data();\r\n            return {\r\n                userId: data.userId,\r\n                task: data.task,\r\n                userEmail: data.userEmail,\r\n                status: data.status,\r\n                userName: data.userName\r\n            }\r\n        });\r\n        this.setState({\r\n            todos: list,\r\n            isLoading: false\r\n        })\r\n    };\r\n\r\n    addTodo = (newTodo) => {\r\n        db.collection('ToDoList').doc(newTodo.userId.toString()).set(newTodo).then(() => {\r\n            const { todos } = this.state;\r\n            todos.push(newTodo);\r\n            this.setState({\r\n                todos,\r\n                showTaskForm: false\r\n            })\r\n        }).catch((error) => {\r\n            console.error(\"Error writing document: \", error);\r\n        });\r\n    }\r\n\r\n    handleChange = (id) => {\r\n\r\n        const { todos } = this.state;\r\n        db.collection(\"ToDoList\").doc(id.toString()).update({\r\n            \"status\": \"completed\",\r\n        }).then(() => {\r\n            const updatedTodos = todos.map(todo =>\r\n                todo.userId === id\r\n                    ? { ...todo, status: 'completed' }\r\n                    : todo\r\n            )\r\n            this.setState({ todos: updatedTodos });\r\n            const message = this.state.userInfo.userName && this.state.userInfo.userName ? \"Congratulations! you have earned 3 To-Do List points.\" : \"Uh oh! you missed a chance to earn To-Do List points. Sign-in now to save points\";\r\n            this.shareSuccessToast(message);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { completedTaskMode, showTaskForm, todos, userInfo, isLoading, isUserLoggedIn } = this.state;\r\n        const completedtodos = todos.filter((item) => { return (item.status === 'completed' && item.userEmail === userInfo.userEmail) }).map((item) => < TodoItem key={item.userId} item={item} handleChange={this.handleChange} />);\r\n        const pendingtodos = todos.filter((item) => { return item.status === 'pending' && item.userEmail === userInfo.userEmail }).map((item) => < TodoItem key={item.userId} item={item} handleChange={this.handleChange} />);\r\n        const userName = userInfo.userName && userInfo.userName !== '' ? userInfo.userName : 'there';\r\n        toast.configure();\r\n        return (\r\n            <div>\r\n                <Header toggleCompletedTaskMode={this.toggleCompletedTaskMode} toggleSigninPopup={this.toggleSigninPopup} toggleSignupPopup={this.toggleSignupPopup} toggleLeaderboardPopup={this.toggleLeaderboardPopup} handleLogOut={this.handleLogOut} {...this.state} />\r\n                <Signin toggleSigninPopup={this.toggleSigninPopup} toggleLoadingMode={this.toggleLoadingMode} updateContent={this.updateContent} {...this.state} updateUserInfo={this.updateUserInfo} updateUserLoggedIn={this.updateUserLoggedIn} shareSuccessToast={this.shareSuccessToast} shareErrorToast={this.shareErrorToast} shareInfoToast={this.shareInfoToast} />\r\n                <Signup toggleSignupPopup={this.toggleSignupPopup} toggleLoadingMode={this.toggleLoadingMode} {...this.state} updateUserInfo={this.updateUserInfo} shareErrorToast={this.shareErrorToast} />\r\n                <Leaderboard toggleLeaderboardPopup={this.toggleLeaderboardPopup} data={completedtodos} {...this.state} />\r\n                {isUserLoggedIn ? <>\r\n                    {isLoading ?\r\n                        <Loading /> : <div>\r\n                            {completedTaskMode ?\r\n                                <div className=\"todo-list\">\r\n                                    {this.showHeaderText(\"Woo Hoo, You have completed following tasks!\")}\r\n                                    <div className=\"scroll-div\">\r\n                                        {completedtodos}\r\n                                    </div>\r\n                                </div> :\r\n                                <div className=\"todo-list\">\r\n                                    {this.showHeaderText(\"Hey \" + userName + \", what's on your mind today?\")}\r\n                                    <div className=\"scroll-div\">\r\n                                        {pendingtodos}\r\n                                    </div>\r\n                                    {showTaskForm && this.showTaskForm()}\r\n                                    <div className=\"todo-link\">\r\n                                        <Link to={'/'} onClick={() => this.toggleShowTaskFormMode(true)}>Add Task</Link>\r\n                                    </div>\r\n                                </div>} </div>}\r\n                </> : <Home {...this.state} toggleSigninPopup={this.toggleSigninPopup} toggleSignupPopup={this.toggleSignupPopup} />\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n    showHeaderText = (headerText) => {\r\n        return <h3> {headerText} </h3>\r\n    }\r\n\r\n    showTaskForm = () => {\r\n        return (\r\n            <TaskForm addToDo={this.addTodo.bind(this)} {...this.state} />\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Main;","import React from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport Main from './components/Main/Main';\r\nimport { BrowserRouter, Switch, Route, Redirect } from \"react-router-dom\";\r\nimport './App.css';\r\n\r\nclass App extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <div className=\"App\">\r\n          <Switch>\r\n            <Route exact path='/To-Do-List-App' component={Main} />\r\n            <Route exact path='/' component={Main} />\r\n            <Route exact path='/To-Do-List-App/home' component={Main} />\r\n            <Route exact path='/To-Do-List-App/completed-task' component={Main} />\r\n            <Redirect to=\"/To-Do-List-App/home\" />\r\n          </Switch>\r\n        </div>\r\n      </BrowserRouter>\r\n    )\r\n  };\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.Fragment>\r\n    <App />\r\n  </React.Fragment>,\r\n  document.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}